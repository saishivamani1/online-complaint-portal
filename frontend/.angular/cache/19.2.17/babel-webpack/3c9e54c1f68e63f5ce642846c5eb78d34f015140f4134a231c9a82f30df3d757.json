{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/api.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(api, router) {\n      this.api = api;\n      this.router = router;\n      this.email = '';\n      this.password = '';\n      this.error = '';\n    }\n    submit() {\n      this.api.login({\n        email: this.email,\n        password: this.password\n      }).subscribe({\n        next: res => {\n          this.api.setToken(res.token);\n          if (res.user?.name) localStorage.setItem('userName', res.user.name);\n          if (res.user?.email) localStorage.setItem('userEmail', res.user.email);\n          this.router.navigateByUrl('/');\n        },\n        error: e => this.error = e.error?.message || 'Login failed'\n      });\n    }\n    static {\n      this.ɵfac = function LoginComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || LoginComponent)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.Router));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: LoginComponent,\n        selectors: [[\"app-login\"]],\n        decls: 8,\n        vars: 2,\n        consts: [[2, \"margin\", \"8px 0\"], [1, \"card\"], [3, \"ngSubmit\"], [\"placeholder\", \"Email\", \"name\", \"email\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"placeholder\", \"Password\", \"name\", \"password\", \"type\", \"password\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"submit\", 1, \"btn\"]],\n        template: function LoginComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"h1\", 0);\n            i0.ɵɵtext(1, \"Login Page\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(2, \"div\", 1)(3, \"form\", 2);\n            i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_3_listener() {\n              return ctx.submit();\n            });\n            i0.ɵɵelementStart(4, \"input\", 3);\n            i0.ɵɵtwoWayListener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_4_listener($event) {\n              i0.ɵɵtwoWayBindingSet(ctx.email, $event) || (ctx.email = $event);\n              return $event;\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(5, \"input\", 4);\n            i0.ɵɵtwoWayListener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_5_listener($event) {\n              i0.ɵɵtwoWayBindingSet(ctx.password, $event) || (ctx.password = $event);\n              return $event;\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(6, \"button\", 5);\n            i0.ɵɵtext(7, \"Login\");\n            i0.ɵɵelementEnd()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(4);\n            i0.ɵɵtwoWayProperty(\"ngModel\", ctx.email);\n            i0.ɵɵadvance();\n            i0.ɵɵtwoWayProperty(\"ngModel\", ctx.password);\n          }\n        },\n        dependencies: [CommonModule, FormsModule, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n        encapsulation: 2\n      });\n    }\n  }\n  return LoginComponent;\n})();","map":{"version":3,"names":["CommonModule","FormsModule","LoginComponent","constructor","api","router","email","password","error","submit","login","subscribe","next","res","setToken","token","user","name","localStorage","setItem","navigateByUrl","e","message","i0","ɵɵdirectiveInject","i1","ApiService","i2","Router","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginComponent_Template_form_ngSubmit_3_listener","ɵɵtwoWayListener","LoginComponent_Template_input_ngModelChange_4_listener","$event","ɵɵtwoWayBindingSet","LoginComponent_Template_input_ngModelChange_5_listener","ɵɵadvance","ɵɵtwoWayProperty","i3","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","RequiredValidator","NgModel","NgForm","encapsulation"],"sources":["/media/sai/DATA/DESKTOP/Node/online-complaint-portal/frontend/src/app/components/login/login.component.ts","/media/sai/DATA/DESKTOP/Node/online-complaint-portal/frontend/src/app/components/login/login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Router, RouterLink } from '@angular/router';\nimport { ApiService } from '../../services/api.service';\n\n@Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [CommonModule, FormsModule, RouterLink],\n  templateUrl: './login.component.html'\n})\nexport class LoginComponent {\n  email = ''; password = ''; error = '';\n  constructor(private api: ApiService, private router: Router) {}\n  submit() {\n    this.api.login({ email: this.email, password: this.password }).subscribe({\n      next: (res) => {\n        this.api.setToken(res.token);\n        if (res.user?.name) localStorage.setItem('userName', res.user.name);\n        if (res.user?.email) localStorage.setItem('userEmail', res.user.email);\n        this.router.navigateByUrl('/');\n      },\n      error: (e) => this.error = e.error?.message || 'Login failed'\n    });\n  }\n}\n","<h1 style=\"margin:8px 0\">Login Page</h1>\n<div class=\"card\">\n  <form (ngSubmit)=\"submit()\">\n    <input placeholder=\"Email\" [(ngModel)]=\"email\" name=\"email\" required />\n    <input placeholder=\"Password\" [(ngModel)]=\"password\" name=\"password\" type=\"password\" required />\n    <button class=\"btn\" type=\"submit\">Login</button>\n  </form>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}