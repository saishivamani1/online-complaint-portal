{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/api.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction ComplaintFormComponent_p_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r0.error);\n  }\n}\nexport let ComplaintFormComponent = /*#__PURE__*/(() => {\n  class ComplaintFormComponent {\n    constructor(api, router) {\n      this.api = api;\n      this.router = router;\n      this.title = '';\n      this.description = '';\n      this.category = 'other';\n      this.location = '';\n      this.error = '';\n    }\n    onFile(e) {\n      this.file = e.target.files[0];\n    }\n    submit() {\n      const fd = new FormData();\n      fd.append('title', this.title);\n      fd.append('description', this.description);\n      fd.append('category', this.category);\n      fd.append('location', this.location);\n      if (this.file) fd.append('photo', this.file);\n      this.api.createComplaint(fd).subscribe({\n        next: c => this.router.navigate(['/complaints', c._id]),\n        error: e => this.error = e.error?.message || 'Failed to submit'\n      });\n    }\n    static {\n      this.ɵfac = function ComplaintFormComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || ComplaintFormComponent)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.Router));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: ComplaintFormComponent,\n        selectors: [[\"app-complaint-form\"]],\n        decls: 23,\n        vars: 5,\n        consts: [[1, \"card\"], [3, \"ngSubmit\"], [\"placeholder\", \"Title\", \"name\", \"title\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"placeholder\", \"Description\", \"name\", \"description\", \"required\", \"\", \"rows\", \"5\", 3, \"ngModelChange\", \"ngModel\"], [1, \"flex\"], [\"name\", \"category\", 3, \"ngModelChange\", \"ngModel\"], [\"value\", \"sanitation\"], [\"value\", \"roads\"], [\"value\", \"water\"], [\"value\", \"electricity\"], [\"value\", \"other\"], [\"placeholder\", \"Location\", \"name\", \"location\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"file\", \"accept\", \"image/*\", 3, \"change\"], [\"type\", \"submit\", 1, \"btn\"], [\"class\", \"error\", \"style\", \"color:#b91c1c\", 4, \"ngIf\"], [1, \"error\", 2, \"color\", \"#b91c1c\"]],\n        template: function ComplaintFormComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"h2\");\n            i0.ɵɵtext(1, \"New Complaint\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(2, \"div\", 0)(3, \"form\", 1);\n            i0.ɵɵlistener(\"ngSubmit\", function ComplaintFormComponent_Template_form_ngSubmit_3_listener() {\n              return ctx.submit();\n            });\n            i0.ɵɵelementStart(4, \"input\", 2);\n            i0.ɵɵtwoWayListener(\"ngModelChange\", function ComplaintFormComponent_Template_input_ngModelChange_4_listener($event) {\n              i0.ɵɵtwoWayBindingSet(ctx.title, $event) || (ctx.title = $event);\n              return $event;\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(5, \"textarea\", 3);\n            i0.ɵɵtwoWayListener(\"ngModelChange\", function ComplaintFormComponent_Template_textarea_ngModelChange_5_listener($event) {\n              i0.ɵɵtwoWayBindingSet(ctx.description, $event) || (ctx.description = $event);\n              return $event;\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(6, \"div\", 4)(7, \"select\", 5);\n            i0.ɵɵtwoWayListener(\"ngModelChange\", function ComplaintFormComponent_Template_select_ngModelChange_7_listener($event) {\n              i0.ɵɵtwoWayBindingSet(ctx.category, $event) || (ctx.category = $event);\n              return $event;\n            });\n            i0.ɵɵelementStart(8, \"option\", 6);\n            i0.ɵɵtext(9, \"Sanitation\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(10, \"option\", 7);\n            i0.ɵɵtext(11, \"Roads\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(12, \"option\", 8);\n            i0.ɵɵtext(13, \"Water\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(14, \"option\", 9);\n            i0.ɵɵtext(15, \"Electricity\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(16, \"option\", 10);\n            i0.ɵɵtext(17, \"Other\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(18, \"input\", 11);\n            i0.ɵɵtwoWayListener(\"ngModelChange\", function ComplaintFormComponent_Template_input_ngModelChange_18_listener($event) {\n              i0.ɵɵtwoWayBindingSet(ctx.location, $event) || (ctx.location = $event);\n              return $event;\n            });\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(19, \"input\", 12);\n            i0.ɵɵlistener(\"change\", function ComplaintFormComponent_Template_input_change_19_listener($event) {\n              return ctx.onFile($event);\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(20, \"button\", 13);\n            i0.ɵɵtext(21, \"Submit\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(22, ComplaintFormComponent_p_22_Template, 2, 1, \"p\", 14);\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(4);\n            i0.ɵɵtwoWayProperty(\"ngModel\", ctx.title);\n            i0.ɵɵadvance();\n            i0.ɵɵtwoWayProperty(\"ngModel\", ctx.description);\n            i0.ɵɵadvance(2);\n            i0.ɵɵtwoWayProperty(\"ngModel\", ctx.category);\n            i0.ɵɵadvance(11);\n            i0.ɵɵtwoWayProperty(\"ngModel\", ctx.location);\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"ngIf\", ctx.error);\n          }\n        },\n        dependencies: [CommonModule, i3.NgIf, FormsModule, i4.ɵNgNoValidate, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm],\n        encapsulation: 2\n      });\n    }\n  }\n  return ComplaintFormComponent;\n})();","map":{"version":3,"names":["CommonModule","FormsModule","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","error","ComplaintFormComponent","constructor","api","router","title","description","category","location","onFile","e","file","target","files","submit","fd","FormData","append","createComplaint","subscribe","next","c","navigate","_id","message","ɵɵdirectiveInject","i1","ApiService","i2","Router","selectors","decls","vars","consts","template","ComplaintFormComponent_Template","rf","ctx","ɵɵlistener","ComplaintFormComponent_Template_form_ngSubmit_3_listener","ɵɵtwoWayListener","ComplaintFormComponent_Template_input_ngModelChange_4_listener","$event","ɵɵtwoWayBindingSet","ComplaintFormComponent_Template_textarea_ngModelChange_5_listener","ComplaintFormComponent_Template_select_ngModelChange_7_listener","ComplaintFormComponent_Template_input_ngModelChange_18_listener","ComplaintFormComponent_Template_input_change_19_listener","ɵɵtemplate","ComplaintFormComponent_p_22_Template","ɵɵtwoWayProperty","ɵɵproperty","i3","NgIf","i4","ɵNgNoValidate","NgSelectOption","ɵNgSelectMultipleOption","DefaultValueAccessor","SelectControlValueAccessor","NgControlStatus","NgControlStatusGroup","RequiredValidator","NgModel","NgForm","encapsulation"],"sources":["/media/sai/DATA/DESKTOP/Node/online-complaint-portal/frontend/src/app/components/complaint-form/complaint-form.component.ts","/media/sai/DATA/DESKTOP/Node/online-complaint-portal/frontend/src/app/components/complaint-form/complaint-form.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ApiService } from '../../services/api.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-complaint-form',\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  templateUrl: './complaint-form.component.html'\n})\nexport class ComplaintFormComponent {\n  title=''; description=''; category='other'; location=''; file?: File; error='';\n  constructor(private api: ApiService, private router: Router) {}\n  onFile(e: any) { this.file = e.target.files[0]; }\n  submit() {\n    const fd = new FormData();\n    fd.append('title', this.title);\n    fd.append('description', this.description);\n    fd.append('category', this.category);\n    fd.append('location', this.location);\n    if (this.file) fd.append('photo', this.file);\n    this.api.createComplaint(fd).subscribe({\n      next: (c: any) => this.router.navigate(['/complaints', c._id]),\n      error: (e) => this.error = e.error?.message || 'Failed to submit'\n    });\n  }\n}\n","<h2>New Complaint</h2><div class=\"card\"><form (ngSubmit)=\"submit()\"><input placeholder=\"Title\" [(ngModel)]=\"title\" name=\"title\" required /><textarea placeholder=\"Description\" [(ngModel)]=\"description\" name=\"description\" required rows=\"5\"></textarea><div class=\"flex\"><select [(ngModel)]=\"category\" name=\"category\"><option value=\"sanitation\">Sanitation</option><option value=\"roads\">Roads</option><option value=\"water\">Water</option><option value=\"electricity\">Electricity</option><option value=\"other\">Other</option></select><input placeholder=\"Location\" [(ngModel)]=\"location\" name=\"location\" /></div><input type=\"file\" (change)=\"onFile($event)\" accept=\"image/*\" /><button class=\"btn\" type=\"submit\">Submit</button><p class=\"error\" *ngIf=\"error\" style=\"color:#b91c1c\">{{error}}</p></form></div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}