{"ast":null,"code":"import 'zone.js';\nimport { bootstrapApplication } from '@angular/platform-browser';\nimport { provideRouter } from '@angular/router';\nimport { provideHttpClient, withInterceptorsFromDi, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AppComponent } from './app/app.component';\nimport { routes } from './app/app.routes';\nimport { TokenInterceptor } from './app/interceptors/token.interceptor';\nbootstrapApplication(AppComponent, {\n  providers: [provideRouter(routes), provideHttpClient(withInterceptorsFromDi()), {\n    provide: HTTP_INTERCEPTORS,\n    useClass: TokenInterceptor,\n    multi: true\n  }]\n}).catch(console.error);","map":{"version":3,"names":["bootstrapApplication","provideRouter","provideHttpClient","withInterceptorsFromDi","HTTP_INTERCEPTORS","AppComponent","routes","TokenInterceptor","providers","provide","useClass","multi","catch","console","error"],"sources":["/media/sai/DATA/DESKTOP/Node/online-complaint-portal/frontend/src/main.ts"],"sourcesContent":["import 'zone.js';\nimport { bootstrapApplication } from '@angular/platform-browser';\nimport { provideRouter } from '@angular/router';\nimport { provideHttpClient, withInterceptorsFromDi, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AppComponent } from './app/app.component';\nimport { routes } from './app/app.routes';\nimport { TokenInterceptor } from './app/interceptors/token.interceptor';\n\nbootstrapApplication(AppComponent, {\n  providers: [\n    provideRouter(routes),\n    provideHttpClient(withInterceptorsFromDi()),\n    { provide: HTTP_INTERCEPTORS, useClass: TokenInterceptor, multi: true },\n  ],\n}).catch(console.error);\n"],"mappings":"AAAA,OAAO,SAAS;AAChB,SAASA,oBAAoB,QAAQ,2BAA2B;AAChE,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,SAASC,iBAAiB,EAAEC,sBAAsB,EAAEC,iBAAiB,QAAQ,sBAAsB;AAEnG,SAASC,YAAY,QAAQ,qBAAqB;AAClD,SAASC,MAAM,QAAQ,kBAAkB;AACzC,SAASC,gBAAgB,QAAQ,sCAAsC;AAEvEP,oBAAoB,CAACK,YAAY,EAAE;EACjCG,SAAS,EAAE,CACTP,aAAa,CAACK,MAAM,CAAC,EACrBJ,iBAAiB,CAACC,sBAAsB,EAAE,CAAC,EAC3C;IAAEM,OAAO,EAAEL,iBAAiB;IAAEM,QAAQ,EAAEH,gBAAgB;IAAEI,KAAK,EAAE;EAAI,CAAE;CAE1E,CAAC,CAACC,KAAK,CAACC,OAAO,CAACC,KAAK,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}