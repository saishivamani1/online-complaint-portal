# render.yaml â€” single web service (backend serves Angular build)
services:
  - type: web
    name: online-complaint-portal
    env: node
    plan: free
    rootDir: backend

    buildCommand: |
      set -e

      echo "=== Backend deps ==="
      npm ci

      echo "=== Frontend build (install dev deps) ==="
      cd ../frontend
      # Either of the following lines works; pick ONE.
      # 1) npm v9+:
      npm ci --include=dev
      # 2) If your npm doesn't support --include=dev, comment the line above and use:
      # NPM_CONFIG_PRODUCTION=false npm ci

      npx ng build --configuration=production

      echo "=== Discover Angular dist path from angular.json ==="
      OUT=$(node -e "const fs=require('fs');const j=JSON.parse(fs.readFileSync('angular.json','utf8'));const p=Object.keys(j.projects)[0];const o=j.projects[p]?.architect?.build?.options?.outputPath || ('dist/'+p);process.stdout.write(o)")
      [ -d \"$OUT/browser\" ] && SRC=\"$OUT/browser\" || SRC=\"$OUT\"
      echo \"Copying from: $SRC\"

      cd ../backend
      rm -rf public
      mkdir -p public
      cp -R ../frontend/$SRC/* public/
      echo \"Public dir contents:\" && ls -la public | head -n 100

    startCommand: npm start
    autoDeploy: true

    envVars:
      - key: NODE_VERSION
        value: 20
      # Tip: you can omit NODE_ENV here; if you keep it, build steps must include dev deps as above.
      # - key: NODE_ENV
      #   value: production

      - key: MONGODB_URI
        sync: false
      - key: JWT_SECRET
        sync: false
      - key: CLIENT_ORIGIN
        sync: false
